columns = 3:10,
groupColumn = NULL,
# groupColumn = "Nacionalidad",
showPoints = TRUE,
alphaLines = "alphaLevel"
)
# install.packages("GGally")
library(GGally)
# df_scaled_1
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = NULL,
groupColumn = "Nacionalidad",
showPoints = TRUE,
#alphaLines = "alphaLevel"
)
# install.packages("GGally")
library(GGally)
# df_scaled_1
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = NULL,
groupColumn = "Nacionalidad",
showPoints = TRUE
#alphaLines = "alphaLevel"
)
# install.packages("GGally")
library(GGally)
# df_scaled_1
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = NULL,
groupColumn = "Nacionalidad",
showPoints = TRUE
#alphaLines = "alphaLevel"
)
# install.packages("GGally")
library(GGally)
# df_scaled_1
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = NULL,
groupColumn = "Nacionalidad",
showPoints = TRUE
#alphaLines = "alphaLevel"
)
# install.packages("GGally")
library(GGally)
# df_scaled_1
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = "Nacionalidad",
showPoints = TRUE
)
table(internet["Sexo"])
library(readxl)
internet <- read_excel("TP1/Internet2013.xlsx")
# str(internet)
df_internet = data.frame(internet)
df_internet
View(internet)
table(internet["Sexo"])
# View(internet)
View(internet)
str(internet)
str(internet)
# Ordenando por la columna 'Edad'
df_internet_edad = df_internet[order(df_internet$Edad), ]
df_internet_edad
# str(internet)
# Ordenando por la columna 'Edad'
df_internet_edad = df_internet[order(df_internet$Edad), ]
df_internet_edad
table(internet["Sitio"])
# install.packages("GGally")
library(GGally)
str(df_internet) # verifico los tipos de datos
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = "Nacionalidad",
showPoints = TRUE
)
table(internet["Sexo"])
# View(internet)
internet["Sexo"=="0"]
internet[interner["Sexo"]=="0"]
internet[internet["Sexo"]=="0"]
internet[internet$Sexo==0]
internet[internet$Sexo==0]
df_internet[internet$Sexo==0]
df_internet[df_internet$Sexo==0]
df_internet[df_internet$Sexo==0,]
df_internet[df_internet$Sexo==0,"Sexo"] = NA
df_internet[df_internet$Sexo==0,"Sexo"]
df_internet = na.omit(df_internet)
View(df_internet)
library(readxl)
recepcionistas <- read_excel("TP1/recepcionistas.xlsx")
# str(recepcionistas)
df_recep = data.frame(recepcionistas)
df_recep
# promedio por cada juez de cada aspirante
# str(recepcionistas)
df_recep = data.frame(recepcionistas)
df_nombres = df_recep[,1]
df_juez_1 = apply(df_recep[,2:4], 1, mean)
df_juez_2 = apply(df_recep[,5:7], 1, mean)
df_final = cbind(df_nombres,cbind(df_juez_1,df_juez_2))
colnames(df_final) = c("candidatas","juez_1", "juez_2")
df_final = data.frame(df_final)
df_final
df_nombres = df_recep["candidatos"]
# str(df_nombres) //verifico que la seleccion me de un df. Ojo la forma del operador []
df_final_b = df_recep["candidatos"]
df_final_b["promedios"] = apply(df_recep[,2:7],1,mean)
df_final_b
# NormalizaciÃ³n
df_scaled_1 = cbind(df_nombres, data.frame(scale(df_recep[,2:7], center=T,scale=T)))
df_scaled_1
# promedio por cada juez de cada aspirante
# str(recepcionistas)
df_recep = data.frame(recepcionistas)
df_nombres = df_recep["candidatos"]
df_scale_juez_1 = scale(df_recep[,2:4], center=T,scale=T)
df_scale_juez_2 = scale(df_recep[,5:7], center=T,scale=T)
df_final = cbind(df_nombres,cbind(df_scale_juez_1,df_scale_juez_2))
df_scaled_2 = data.frame(df_final)
df_scaled_2
# verifico medias centradas en 0
# round(apply(df_scale_juez_1, 2, mean),2)
# round(apply(df_scale_juez_2, 2, mean),2)
# install.packages("GGally")
library(GGally)
# df_scaled_1
ggparcoord(data = df_scaled_1,
columns = 2:7,
groupColumn = "candidatos",
showPoints = TRUE
)
ggparcoord(data = df_scaled_2,
columns = 2:7,
groupColumn = "candidatos",
showPoints = TRUE
)
library(readxl)
internet <- read_excel("TP1/Internet2013.xlsx")
# str(internet)
df_internet = data.frame(internet)
df_internet
# install.packages("GGally")
library(GGally)
# str(df_internet) # verifico los tipos de datos
ggparcoord(data = df_internet,
columns = 3:10,
groupColumn = "Nacionalidad",
showPoints = TRUE
)
table(df_internet$Sexo)
df_internet_sexo = df_internet
summary(df_internet_sexo$Sexo)
# str(df_internet)
# Ordenando por la columna 'Edad'
df_internet = df_internet[order(df_internet$Edad), ]
table(df_internet$Edad)
summary(df_internet$Edad)
# Tabla de frecuencias para la variable 'Sitio'
table(df_internet$Sitio)
summary(df_internet$Sitio)
# Tabla de frecuencias para la variable 'Temperatura'
print("frecuencias")
table(df_internet$Temperatura)
print("Estadisticos principales")
print(summary(df_internet$Temperatura))
# Tabla de frecuencias para la variable 'Autos'
print("frecuencias")
table(df_internet$Autos)
print("Estadisticos principales")
print(summary(df_internet$Autos))
# Tabla de frecuencias para la variable 'Cigarrillos'
print("frecuencias")
table(df_internet$Cigarrillos)
print("Estadisticos principales")
print(summary(df_internet$Cigarrillos))
df_internet[df_internet$Sexo==0,"Sexo"] = NA
df_internet = na.omit(df_internet) # quito las filas con NA
df_internet[df_internet$Edad==-44,"Edad"] = NA
df_internet[df_internet$Sitio==8,"Sitio"] = NA
df_internet = na.omit(df_internet) # quito las filas con NA
df_internet[df_internet$Sitio==28,"Sitio"] = NA
df_internet = na.omit(df_internet) # quito las filas con NA
summary(df_internet$Sitio)
summary(df_internet[,c("Edad","Estatura","Temperatura","Autos","Cigarrillos")])
#mfrow()
boxplot(df_internet$Edad, horizontal = TRUE)
boxplot(df_internet$Estatura, horizontal = TRUE)
boxplot(df_internet$Temperatura, horizontal = TRUE)
boxplot(df_internet$Autos, horizontal = TRUE)
boxplot(df_internet$Cigarrillos, horizontal = TRUE)
print("Outliers variable Edad")
Q1_edad = quantile(df_internet$Edad,0.25)
Q3_edad = quantile(df_internet$Edad,0.75)
DI_edad = Q3_edad - Q1_edad
LS1=Q3_edad+1.5*DI_edad
LS2=Q3_edad+3*DI_edad
LI1=Q1_edad-1.5*DI_edad
LI2=Q1_edad-3*DI_edad
print("Moderados")
df_internet[df_internet$Edad > LS1 , "Edad"]
df_internet[df_internet$Edad < LI1 , "Edad"]
df_internet[df_internet$Edad > LS2 , "Edad"]
df_internet[df_internet$Edad < LI2 , "Edad"]
print("Outliers variable Auto")
Q1_auto = quantile(df_internet$Auto,0.25)
Q3_auto = quantile(df_internet$Auto,0.75)
DI_auto = Q3_auto - Q1_auto
LS1=Q3_auto+1.5*DI_auto
LS2=Q3_auto+3*DI_auto
LI1=Q1_auto-1.5*DI_auto
LI2=Q1_auto-3*DI_auto
print("Moderados")
df_internet[df_internet$Auto > LS1 , "Auto"]
df_internet[df_internet$Auto < LI1 , "Auto"]
print("Salvajes")
df_internet[df_internet$Auto > LS2 , "Auto"]
df_internet[df_internet$Auto < LI2 , "Auto"]
{r}
library(readxl)
gorriones <- read_excel("TP1/gorriones.xlsx")
# str(internet)
df_gorriones = data.frame(gorriones)
df_gorriones
View(df_gorriones)
str(df_gorriones)
# str(internet)
df_gorriones = data.frame(gorriones, colnames("pajaro","largo_t","ext_alar", "largo_pc", "largo_h","largo_qe","sobrevida"))
library(readxl)
gorriones <- read_excel("TP1/gorriones.xlsx")
# str(internet)
df_gorriones = data.frame(gorriones)
colnames(df_gorriones) = c("pajaro","largo_t","ext_alar", "largo_pc", "largo_h","largo_qe","sobrevida")
str(df_gorriones)
colnames(df_gorriones) = c("pajaro","largo_t","ext_alar", "largo_pc", "largo_h",
"largo_qe","sobrevida")
str(df_gorriones)
View(df_gorriones)
summary(df_gorriones$largo_t)
table(df_gorriones$largo_t)
summary(df_gorriones$largo_t)
print("frecuencias")
table(df_gorriones$largo_t)
print("Estadisticos principales")
summary(df_gorriones$largo_t)
print("frecuencias: "+table(df_gorriones$largo_t))
print("Frecuencias (variable largo_t: ")
table(df_gorriones$largo_t)
print("Estadisticos principales")
summary(df_gorriones$largo_t)
print("Frecuencias (variable largo_t): ")
table(df_gorriones$largo_t)
print("Estadisticos principales")
summary(df_gorriones$largo_t)
print("Frecuencias (variable largo_t): ")
table(df_gorriones$largo_t)
print("Estadisticos principales: ")
summary(df_gorriones$largo_t)
print("Frecuencias (variable largo_t): ")
table(df_gorriones$largo_t)
print("Estadisticos principales: ")
summary(df_gorriones$largo_t)
print("Frecuencias (variable ext_alar): ")
table(df_gorriones$ext_alar)
print("Estadisticos principales: ")
summary(df_gorriones$ext_alar)
print("Frecuencias (variable largo_pc): ")
table(df_gorriones$largo_pc)
print("Estadisticos principales: ")
summary(df_gorriones$largo_pc)
print("Frecuencias (variable largo_h): ")
table(df_gorriones$largo_h)
print("Estadisticos principales: ")
summary(df_gorriones$largo_h)
print("Frecuencias (variable largo_qe): ")
table(df_gorriones$largo_qe)
print("Estadisticos principales: ")
summary(df_gorriones$largo_qe)
print("Frecuencias (variable sobrevida): ")
table(df_gorriones$sobrevida)
print("Estadisticos principales: ")
summary(df_gorriones$sobrevida)
print("Frecuencias (variable largo_t): ")
table(df_gorriones$largo_t)
print("Estadisticos principales: ")
summary(df_gorriones$largo_t)
print("Frecuencias (variable ext_alar): ")
table(df_gorriones$ext_alar)
print("Estadisticos principales: ")
summary(df_gorriones$ext_alar)
print("Frecuencias (variable largo_pc): ")
table(df_gorriones$largo_pc)
print("Estadisticos principales: ")
summary(df_gorriones$largo_pc)
print("Frecuencias (variable largo_h): ")
table(df_gorriones$largo_h)
print("Estadisticos principales: ")
summary(df_gorriones$largo_h)
print("Frecuencias (variable largo_qe): ")
table(df_gorriones$largo_qe)
print("Estadisticos principales: ")
summary(df_gorriones$largo_qe)
print("Frecuencias (variable sobrevida): ")
table(df_gorriones$sobrevida)
print("/nEstadisticos principales: ")
summary(df_gorriones$sobrevida)
print("Frecuencias (variable largo_t): ")
table(df_gorriones$largo_t)
print("Estadisticos principales: ")
summary(df_gorriones$largo_t)
print("Frecuencias (variable ext_alar): ")
table(df_gorriones$ext_alar)
print("Estadisticos principales: ")
summary(df_gorriones$ext_alar)
print("Frecuencias (variable largo_pc): ")
table(df_gorriones$largo_pc)
print("Estadisticos principales: ")
summary(df_gorriones$largo_pc)
print("Frecuencias (variable largo_h): ")
table(df_gorriones$largo_h)
print("Estadisticos principales: ")
summary(df_gorriones$largo_h)
print("Frecuencias (variable largo_qe): ")
table(df_gorriones$largo_qe)
print("Estadisticos principales: ")
summary(df_gorriones$largo_qe)
print("Frecuencias (variable sobrevida): ")
table(df_gorriones$sobrevida)
print("Estadisticos principales: ")
summary(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
c("pajaro","largo_t","ext_alar", "largo_pc", "largo_h",
"largo_qe","sobrevida")
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=2, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=1, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=8, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=10, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=10, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=10, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=2, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=10, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_t))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=ext_alar))+geom_histogram(bins=7, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_pc))+geom_histogram(bins=10, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_h))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=largo_qe))+geom_histogram(bins=6, fill="blue", alpha=0.2)
ggplot(df_gorriones, aes(x=sobrevida))+geom_histogram(bins=3, fill="blue", alpha=0.2)
# grafico funcion de densidad y poligono de frecuencias
ggplot(df_gorriones, aes(x=largo_qe))+geom_density(bins=3, fill="red", alpha=0.5)
ggplot(df_gorriones, aes(x=largo_pc))+geom_freqpoly(bins=3, fill="red", alpha=0.5)
df_gorriones[df_gorriones$sobrevida==1]
df_gorriones[df_gorriones$sobrevida==1,]
df_gorriones[df_gorriones$sobrevida==-1]
df_gorriones[df_gorriones$sobrevida==-1,]
boxplot(solo_muertos)
solo_vivos = df_gorriones[df_gorriones$sobrevida==1,]
solo_muertos = df_gorriones[df_gorriones$sobrevida==-1,]
boxplot(solo_muertos)
boxplot(solo_vivos$largo_t,solo_muertos$largo_t)
solo_vivos = df_gorriones[df_gorriones$sobrevida==1,]
solo_muertos = df_gorriones[df_gorriones$sobrevida==-1,]
boxplot(solo_vivos$largo_t,solo_muertos$largo_t)
boxplot(solo_vivos$ext_alar,solo_muertos$ext_alar)
boxplot(solo_vivos$largo_pc,solo_muertos$largo_pc)
boxplot(solo_vivos$largo_h,solo_muertos$largo_h)
boxplot(solo_vivos$largo_qe,solo_muertos$largo_qe)
# install.packages("GGally")
library(GGally)
ggparcoord(data = df_gorriones,
columns = 2:6,
groupColumn = "sobrevida",
showPoints = TRUE
)
pairs(df_gorriones[2:6])
ggplot(df_gorriones, aes(x="largo_t", y="largo_pc"))+geom_point(color="orange")
ggplot(df_gorriones, aes(x="largo_t", y="largo_pc"))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x="largo_t", y="largo_pc"))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x="largo_t", y="largo_h"))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x="largo_pc", y="largo_h"))+geom_point(color="green")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x="largo_t", y="largo_pc"))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x="largo_t", y="largo_h"))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x="largo_pc", y="largo_h"))+geom_boxplot(color="green")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_boxplot(color="green")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_boxplot(color="blue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_boxplot(aes(x=largo_pc, y=largo_h, fill=df_gorriones$sobrevida))+facet_grid(df_gorriones$sobrevida)+theme_bw()
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
# ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_boxplot(aes(x=largo_pc, y=largo_h, fill=df_gorriones$sobrevida))+facet_grid(df_gorriones$sobrevida)+theme_bw()
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_point(color="cadetred")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_point(color="softred")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_pc))+geom_point(color="orange")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_t, y=largo_h))+geom_point(color="cadetblue")+facet_grid(df_gorriones$sobrevida)
ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_point(color="red")+facet_grid(df_gorriones$sobrevida)
# ggplot(df_gorriones, aes(x=largo_pc, y=largo_h))+geom_boxplot(aes(x=largo_pc, y=largo_h, fill=df_gorriones$sobrevida))+facet_grid(df_gorriones$sobrevida)+theme_bw()
`| 3 1 1 || 1 3 1 || 1 1 5 |`
mat.cov = matrix(c(3,1,1,1,3,1,1,1,5), nrow = 3, byrow = T)
autovectores = eigen(mat.cov)$values
autovectores = eigen(mat.cov)$vectors
mat.cov = matrix(c(3,1,1,1,3,1,1,1,5), nrow = 3, byrow = T)
autovalores = eigen(mat.cov)$values
autovectores = eigen(mat.cov)$vectors
autovalores
autovectores
porc=round(rbind("cada.uno"=(autovalores)/sum(autovalores),
"acumulado"=cumsum(autovalores)/sum(autovalores)),3)
colnames(proc) = c("lambda1","lambda2","lambda3")
porc=round(rbind("cada.uno"=(autovalores)/sum(autovalores),
"acumulado"=cumsum(autovalores)/sum(autovalores)),3)
porc=round(rbind("cada.uno"=(autovalores)/sum(autovalores),
"acumulado"=cumsum(autovalores)/sum(autovalores)),3)
colnames(proc) = c("lambda1","lambda2","lambda3")
porc=round(rbind("cada.uno"=(autovalores)/sum(autovalores),
"acumulado"=cumsum(autovalores)/sum(autovalores)),3)
colnames(porc) = c("lambda1","lambda2","lambda3")
porc
acp.cov = prcomp(datos, scale. = T, center = T)
acp.cov = prcomp(mat.cov, scale. = T, center = T)
acp.cov
summary(acp.cov)
shapiro.test(tpos1)
library(stats)
tpos1 = c(0.17,0.26,0.19,0.34,0.52,0.33,0.23,0.20,0.18,0.22, 0.21,0.22,0.28,0.25,0.90,0.33,0.22,0.17,0.39,0.27)
tpos2 = c(0.18,0.33,0.23,0.16,0.19,0.30,0.21,0.20,0.16,0.21, 0.20,0.30,0.32,0.20,0.19,0.22,0.27,0.24,0.29,0.27)
shapiro.test(tpos1)#rechaza
shapiro.test(tpos2)
boxCox(tpos1$1, plotit = T)
library(stats)
library(scales)
tpos1 = c(0.17,0.26,0.19,0.34,0.52,0.33,0.23,0.20,0.18,0.22, 0.21,0.22,0.28,0.25,0.90,0.33,0.22,0.17,0.39,0.27)
tpos2 = c(0.18,0.33,0.23,0.16,0.19,0.30,0.21,0.20,0.16,0.21, 0.20,0.30,0.32,0.20,0.19,0.22,0.27,0.24,0.29,0.27)
boxCox(tpos1$1, plotit = T)
boxCox(tpos1, plotit = T)
library(MASS)
boxcox(tpos1, plotit = T)
library(MASS)
boxcox(tpos1$1, plotit = T)
library(MASS)
boxcox(tpos1~1, plotit = T)
setwd("~/Documentos/Maestria/AMDEF/labo")
