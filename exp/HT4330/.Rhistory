# calculamos el tamaño de cada muestra
n1 = length(pob1)
n1
n2 = length(pob2)
n2
# Grafico
boxplot(pob1, pob2, horizontal = TRUE, main = "Diagrama de caja", col = "lightcyan",
xlab="Litros", ylab="Lubricantes")
# Estadisticos de las muestras
summary(pob1)
summary(pob2)
# Prueba de hipotesis
t.test(pob1,pob2, paired = FALSE, var.equal = TRUE, conf.level = 0.95)
knitr::opts_chunk$set(echo = TRUE)
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas = data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
tiempo = c(comp1, comp2))
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas = data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
tiempo = c(comp1, comp2))
peliculas
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas = data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
tiempo = c(comp1, comp2))
peliculas
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas <- data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
tiempo = c(comp1, comp2))
peliculas
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas <- data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
tiempo = c(comp1, comp2))
peliculas
library(tinytex)
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas <- data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
tiempo = c(comp1, comp2))
peliculas
shapiro.test(comp1)
shapiro.test(comp2)
library(fBasics)
shapiro.test(comp2)
qqnormPlot(comp1,comp2)
qqnormPlot(comp1,comp2)
boxplot(comp1,comp2)
# outlayer
boxplot(comp1,comp2,plot = FALSE)$out
library(car)
leveneTest(Tiempo~Companias, data = peliculas )
comp1 = c(102,86,98,109,92)
comp2 = c(81,165,97,134,92,87,114)
peliculas <- data.frame(Companias=factor(c(rep("1",5), rep("2",7))),
Tiempo = c(comp1, comp2))
peliculas
leveneTest(Tiempo~Companias, data = peliculas )
t.test(comp1,comp2,alternative = "10", conf.level = 0.90, var.equal = TRUE)
t.test(comp1,comp2,alternative = "greater", conf.level = 0.90, var.equal = TRUE)
t.test(comp1,comp2, alternative = "greater",
conf.level = 0.90, var.equal = TRUE,
mu = 10)
knitr::opts_chunk$set(echo = TRUE)
# Cargamos los datos
pob1 = c(20.1,22.5,22.2,30.2,22.8,22.1,21.2,21.4,20.7,24.9,23.9,23.3)
pob2 = c(25.3,31.2,22.4,23.1,26.4,28.2,21.3,31.1,26.2,21.4)
pob1
pob2
# calculamos el tamaño de cada muestra
n1 = length(pob1)
n1
n2 = length(pob2)
n2
# Grafico
boxplot(pob1, pob2, horizontal = TRUE, main = "Diagrama de caja", col = "lightcyan",
xlab="Litros", ylab="Lubricantes")
# Estadísticos de las muestras
summary(pob1)
summary(pob2)
# Prueba de hipotesis
t.test(pob1,pob2, var.equal = TRUE, conf.level = 0.95, alternative = "two.sided")
indice_mas_ventoso = which.max(airquality$Wind)
dia = airquality$Day[indice_mas_ventoso]
mes = airquality$Month[indice_mas_ventoso]
print(paste(sep='', 'El dia más ventoso fue el ',dia,'/',mes))
head(airquality)
tail(airquality)
temp_mayo=airquality$Temp[airquality$Month==5]
temp_mayo
tapply(airquality$Ozone, airquality$Month, mean, na.rm = TRUE)
media = mean(airquality$Temp)
mediana = median(airquality$Temp)
hist(airquality$Temp, col="lightblue",probability = TRUE, main = "")
abline(v=media, col="red", lty = 2,lwd = 2)
abline(v=mediana, col="violet", lty = 2,lwd = 2)
legend(55, 0.04,c("Media", "Mediana"), col = c("red","violet"), lty=c(2,3))
legend(60, 0.04,c("Media", "Mediana"), col = c("red","violet"), lty=c(2,3)
setwd("C:/Users/scivi/OneDrive/Desktop/MAESTRIA/Introduccion al Software R/Guia Practica 2")
library(readxl)
pisasci2006 <- read_excel("C:/Users/scivi/OneDrive/Desktop/MAESTRIA/Introduccion al Software R/Guia Practica 2/pisasci2006.xlsx",
sheet = "Hoja1")
View(pisasci2006)
View(pisasci2006)
View(airquality)
View(pisasci2006)
pisasci2006[Country==Argentina,]
str(pisasci2006)
View(pisasci2006$Country)
# Seleccionar la fila correspondiente a Argentina.
pisasci2006[Argentina,]
pisasci2006[pisasci2006$Country=="Argentina",]
# Seleccionar la fila correspondiente a Argentina.
pisasci2006[pisasci2006$Country=="Argentina",]
pisasci2006[Country=="Argentina",]
pisasci2006[pisasci2006$Country=="Argentina",]
# Seleccionar las filas para Argentina, Uruguay y Chile.
pisasci2006[pisasci2006$Country==c("Argentina","Uruguay", "Chile")]
pisasci2006[pisasci2006$Country==c("Argentina","Uruguay", "Chile"),]
pisasci2006[pisasci2006$Country==c("Argentina","Uruguay", "Chile"),]
head(pisasci2006)
pisasci2006[c("Argentina","Uruguay", "Chile"),]
# Seleccionar las filas para Argentina, Uruguay y Chile.
pisasci2006[Country==c("Argentina","Uruguay", "Chile"),]
pisasci2006[pisasci2006$Country==c("Argentina","Uruguay", "Chile"),]
# Seleccionar las filas para Argentina, Uruguay y Chile.
pisasci2006[pisasci2006$Country==c("Argentina"),]
# Seleccionar las filas para Argentina, Uruguay y Chile.
pisasci2006[pisasci2006$Country=="Argentina" | pisasci2006$Country=="Uruguay" | pisasci2006$Country=="Chile",]
hist(pisasci2006$Overall,add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
legend(2,36,bty="n",c("Largo Petalos","Largo Sepalos"),fill=c("pink","lightslateblue"))
hist(pisasci2006$Overall,add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
legend(2,36,bty="n",c("Largo Petalos","Largo Sepalos"),fill=c("pink","lightslateblue"))
# Graficar los ingresos de todos los países en función de la nota global.
hist(pisasci2006[,c("Overal","Income")],add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
hist(pisasci2006[,c("Overall","Income")],add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
legend(2,36,bty="n",c("Largo Petalos","Largo Sepalos"),fill=c("pink","lightslateblue"))
hist(pisasci2006[,c("Overall","Income")],add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
legend(2,36,bty="n",c("Largo Petalos","Largo Sepalos"),fill=c("pink","lightslateblue"))
# Graficar los ingresos de todos los países en función de la nota global.
hist(pisasci2006[,c("Overall","Income")],add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
hist(pisasci2006[,c("Overall","Income")],add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
# Graficar los ingresos de todos los países en función de la nota global.
hist(pisasci2006$Overall[,c("Overall","Income")],add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
# Graficar los ingresos de todos los países en función de la nota global.
hist(pisasci2006$Overall,add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
hist(pisasci2006$Overall,add=TRUE,col=rgb(0,0,1,alpha=0.4)) # proporcion de cada color red green y blue
hist(pisasci2006$Overall,add=TRUE
hist(pisasci2006,add=TRUE)
# Graficar los ingresos de todos los países en función de la nota global.
hist(pisasci2006) # proporcion de cada color red green y blue
repeat {nlot<-sample(1:10,1,rep=T); if(nlot==5) break() else cat("No es 5
es ",nlot,"\n")}
repeat {
nlot<-sample(1:10,1,rep=T);
if(nlot==5) break()
else
cat("No es 5 es ",nlot,"\n")
}
# subconjuntos
datos11= c (77, 58, 89,55,47,60,54,58,75,65,82,85,75,65,1.63,1.63,1.85,1.62,1.60,1.63,1.70,1.65,1.78,1.70,1.77,1.83,1.74,1.65,23,23,26,23,26,26,22,23,26,24,28,42,25,26)
matriz1 = matrix(datos11, 14, 3, dimnames = list(c(), c("Peso","Altura","Edad")))
Sexo<-factor(c("H","M","H","H","M","M","H","M","M","H","H","H","M","M"))
matriz2<-c(matriz1,Sexo)
matriz2<-c(matriz1,Sexo)
matriz3 <- matrix(matriz2,14,4,dimnames=list(c(),c("Peso","Altura","Edad","Sexo")))
dataframe0<-data.frame(matriz3)
Nombres1=c("Carlos","Ana","Manu","Ramiro","María","Camila","Germán","Rosana","Carme
n","Juan","Dani","Antonio","Belén","Lucía")
dataframe1 <- data.frame(dataframe0, Nombres1)
subset(dataframe1,select=c(Sexo,Nombres1))
subset(dataframe1, select = c(Peso,Altura))
subset(dataframe1, Altura > 1.70)
subset(dataframe1, Altura > 1.71 & Peso > 60)
subset(dataframe1, Altura > 1.71 & Peso> 60 & Sexo=="1")
subset(dataframe1, Altura>1.71 & Peso>60 & Sexo=="1",select=Nombres1)
subset(dataframe1, Altura>1.71 & Peso >60 & Sexo=="1", select=c(Edad,Nombres1))
filtro = dataframe1[,"Altura"] < 1.80
filtro
dataframe1[filtro,"Altura"] = NA
subset(dataframe1, Altura>1.80)
transform(dataframe1,logPeso=log(Peso))
replicate(10, sample(1:100, 15))
ff <- function(n, mean, sd) mean(rnorm(n, mean=mean, sd=sd))
res <- replicate(10000, ff(100, 0, 1))
hist(res)
mean(res)
data11 <- data.frame(x1 = c(1, 4, 8, 1),    # Data Frame 1
x2 = c(5, 2, 1, 4),
x3 = c(1, 2, 3, 4))
data21 <- data.frame(y1 = c(2, 8, 8, 5),    # Data Frame 2
y2 = c(5, 3, 2, 4),
y3 = c(1, 2, 3, 4))
merge(data11,data21,by.x="x2",by.y="y2")
merge(data11,data21,by.x="x2",by.y="y2")
merge(data11,data21,by.x="x2",by.y="y2")
data21
data11
data21
merge(data11,data21,by.x="x2",by.y="y2")
Nombres=c("Ana","Manu","Camila","Nacho","Ramiro","Nicolas","Joaquin")
Car=c("ing","pub","diseño","filosofia","contador","economia","nada")
trab=c(1,0,0,1,1,1,0)
dataframe3=cbind(Nombres,Car,trab)
dataframe3=as.data.frame(dataframe3)
dataframe3
Nombres=c("Ana","Manu","Camila","Nacho","Ramiro","Nicolas","Joaquin")
Car=c("ing","pub","diseño","filosofia","contador","economia","nada")
trab=c(1,0,0,1,1,1,0)
dataframe3=cbind(Nombres,Car,trab)
dataframe3=as.data.frame(dataframe3)
merge(dataframe1,dataframe3,by.x="Nombres1",by.y="Nombres")
merge(dataframe1,dataframe3,by.x="Nombres1",by.y="Nombres",all.x=T)
merge(dataframe1,dataframe3,by.x="Nombres1",by.y="Nombres",all.y=T)
merge(dataframe1,dataframe3,by.x="Nombres1",by.y="Nombres",all.x=T,all.y=T)
merge(dataframe1,dataframe3,by.x="Nombres1",by.y="Nombres",all.x=T,all.y=T)
setdiff(dataframe1,dataframe3)
setdiff(dataframe3$Nombres,dataframe1$Nombres1)
setdiff(dataframe1$Nombres1,dataframe3$Nombres)
df<-c(1,2,3,2,4,5,1,6,8,9,8,6)
#eliminates the duplicate values in the vector
unique(df)
unique(dataframe1)
get("datos11")
get("Nombres")
get("Nomb")
get0("x",ifnotfound=" NO Ta")
get0("Nombres",ifnotfound=" NO Ta")
get0("Nombr",ifnotfound=" NO Ta")
set.seed(1)
a=runif(50,0,2)
b=runif(50,0,2)
xxx=rnorm(50,0,3)
plot(xxx+b,xxx+a)
corr(xxx+b,xxx+a)
set.seed(1)
a=runif(50,0,2)
b=runif(50,0,2)
xxx=rnorm(50,0,3)
plot(xxx+b,xxx+a)
cor(xxx+b,xxx+a)
lines((xxx+a)~(xxx+b),col=2)
x4=xxx+b
y4=xxx+a
plot(x4,y4)
ablines(x4~y4,col=2)
cor(x4,y4)
ablines(x4~y4,col=2)
plot(x4,y4)
ablines(x4~y4,col=2)
abline(x4~y4,col=2)
line(x4~y4,col=2)
lines(x4~y4,col=2)
ablines(lm(x4~y4),col=2)
plot(x4,y4)
ablines(lm(x4~y4),col=2)
ablines(lm(x4~y4),col=2)
ablines(lm(y4~x4),col=2)
abline(lm(y4~x4),col=2)
v=vector[1:15]
vector=1:15
vector
append(vector, c(1,2,3,5), after = 5)
vector
vector = append(vector, c(1,2,3,5), after = 5)
vector
head(airquality)
detach(airquality)
sum(is.na(vector))
sum(is.na(airquality$Ozone))
apply(is.na(airquality),2, sum)
sapply(airquality,function(x)sum(is.na(x)))
sapply(airquality,function(x)sum(is.na(x)))
apply(is.na(airquality),2, sum)
apply(is.na(airquality),2, sum)
apply(is.na(airquality),2, sum)
suma = 0
while (suma>=5000) {
suma = suma + runif(0,1)
}
suma
suma = 0
while (suma>=5000) {
suma = suma + runif(1,0,1)
}
suma
suma = 0
while (suma>=5000) {
suma = suma + runif(1)
}
suma
suma = 0
while (suma>=5000) {
suma = suma + runif(1)
}
suma
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
}
suma
set.seed(1)
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
n=n+1
}
suma
n
set.seed(1)
n=0
suma = 0
while (suma<=5000) {
suma = suma + runif(1)
n=n+1
}
suma
n
set.seed(1)
n=0
suma = 0
repeat {
suma = suma + runif(1)
n=n + 1
if (suma >= 5000) break
}
suma
n
set.seed(1)
n=0
suma = 0
repeat {
suma = suma + runif(1)
n=n + 1
if (suma >= 5000) break
}
page("se alcanzo el valor ",suma, " en ",n, " pasos\n")
set.seed(1)
n=0
suma = 0
repeat {
suma = suma + runif(1)
n=n + 1
if (suma >= 5000) break
}
cat("se alcanzo el valor ",suma, " en ",n, " pasos\n")
for(r in rivers){
print(r)
}
result = null
i=0
for(r in rivers){
result = append(r,(rivers[i]+r)/2)
i++
print(result)
}
result = null
i=0
for(r in rivers){
result = append(r,(rivers[i]+r)/2)
i++
print(r,result)
}
result = null
i=0
for(r in rivers){
result = append(r,(rivers[i]+r)/2)
i++
cat(r,", ",result,"\n")
}
result = null
i=0
for(r in rivers){
result = append(r,(rivers[i]+r)/2)
i++
cat(r)
}
result
result = null
i=0
for(r in rivers){
result = append(r,(rivers[i]+r)/2)
i++
print(r)
}
result
prom.rivers = prom.movil(rivers)
plot(prom.rivers, panel.first = lines(prom.rivers, col=2))
prom.rivers = prom.movil.window(rivers,5)
plot(prom.rivers, panel.first = lines(prom.rivers, col=2))
prom.movil.window = function(v, window=1) {
result = c()
for(i in 1:(length(v)-window)) {
result = append(result,sum(v[i:(i+window)])/(window+1))
}
return (result)
}
prom.rivers = prom.movil(rivers)
plot(prom.rivers, panel.first = lines(prom.rivers, col=2))
prom.rivers = prom.movil.window(rivers,5)
plot(prom.rivers, panel.first = lines(prom.rivers, col=2))
result = null
i=0
for(r in rivers){
result = append(r,(rivers[i]+r)/2)
i=i+1
print(r)
}
result
result = null
i=1
for(r in rivers){
result = append(r,(rivers[i+1]+r)/2)
i=i+1
print(r)
}
result
result = null
i=1
for(r in rivers){
result = append(r,(r+rivers[i+1])/2)
i=i+1
print(r)
}
result
result = c()
i=1
for(r in rivers){
result = append(r,(r+rivers[i+1])/2)
i=i+1
print(r)
}
result
result = c()
for(i in 1:length(rivers)-1){
result = append(result,(rivers[i]+rivers[i+1])/2)
print(r)
}
result
result = null
for(i in 1:length(rivers)-1){
result = append(result,(rivers[i]+rivers[i+1])/2)
print(r)
}
result
gradosC=function(x){
print("ingresar grados F")
x=5/9*(x-32)
x
}
rep(2,3,by=0.5)
x=c(1:10)
x[x==10]
# a)
df_recep()
library(readxl)
recepcionistas <- read_excel("recepcionistas.xlsx")
View(recepcionistas)
str(recepcionistas)
df_recep = data.frame(recepcionistas)
str(recepcionistas)
# Ejercicio 1: Calcule en promedio por juez de cada una de las aspirantes.
# ¿Cuál le parece que seleccionaría cada uno de ellos? ¿Existe coincidencia?
plot(cars)
install.packages( "data.table", dependencies= TRUE )
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ',
'devtools', 'uuid', 'digest'))
install.packages('IRkernel')
library( "IRkernel" )
IRkernel::installspec()
quit()
setwd("C:/Users/scivi/OneDrive/Desktop/MAESTRIA/AMDEF")
source("C:/Users/scivi/OneDrive/Desktop/MAESTRIA/AMDEF/labo/src/ranger/433_ranger_BO.r", echo=TRUE)
